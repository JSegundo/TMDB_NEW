{"ast":null,"code":"var _jsxFileName = \"/home/segundo/Documents/CODE/BOOTCAMP/chekpoints/TMDB-checkpoint-220101/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../src/assets/styles/index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\nimport { ChakraProvider } from \"@chakra-ui/provider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = {\n  config: {\n    useSystemColorMode: false,\n    // or true\n    initialColorMode: \"dark\",\n    //\n    cssVarPrefix: \"chakra\" // any string\n\n  }\n};\nexport const UserContext = /*#__PURE__*/createContext();\n\nconst Root = () => {\n  _s();\n\n  const [user, setUser] = useState({});\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: {\n        user,\n        setUser\n      },\n      children: /*#__PURE__*/_jsxDEV(ChakraProvider, {\n        children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Root, \"cCRtNmj6gRKVA5wOmLEmdl385z4=\");\n\n_c = Root;\nexport default ReactDOM.render( /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 32\n}, this), document.getElementById(\"root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"Root\");","map":{"version":3,"sources":["/home/segundo/Documents/CODE/BOOTCAMP/chekpoints/TMDB-checkpoint-220101/src/index.js"],"names":["React","createContext","useState","ReactDOM","BrowserRouter","App","ChakraProvider","theme","config","useSystemColorMode","initialColorMode","cssVarPrefix","UserContext","Root","user","setUser","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,gCAAP;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AAEA,SAASC,cAAT,QAA+B,qBAA/B;;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE;AACNC,IAAAA,kBAAkB,EAAE,KADd;AACqB;AAC3BC,IAAAA,gBAAgB,EAAE,MAFZ;AAEoB;AAC1BC,IAAAA,YAAY,EAAE,QAHR,CAGkB;;AAHlB;AADI,CAAd;AAQA,OAAO,MAAMC,WAAW,gBAAGX,aAAa,EAAjC;;AAEP,MAAMY,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AAEA,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEY,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAA7B;AAAA,6BACE,QAAC,cAAD;AAAA,+BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAZD;;GAAMF,I;;KAAAA,I;AAcN,eAAeV,QAAQ,CAACa,MAAT,eAAgB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA0BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B,CAAf","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../src/assets/styles/index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\n\nimport { ChakraProvider } from \"@chakra-ui/provider\";\n\nconst theme = {\n  config: {\n    useSystemColorMode: false, // or true\n    initialColorMode: \"dark\", //\n    cssVarPrefix: \"chakra\", // any string\n  },\n};\n\nexport const UserContext = createContext();\n\nconst Root = () => {\n  const [user, setUser] = useState({});\n\n  return (\n    <BrowserRouter>\n      <UserContext.Provider value={{ user, setUser }}>\n        <ChakraProvider>\n          <App />\n        </ChakraProvider>\n      </UserContext.Provider>\n    </BrowserRouter>\n  );\n};\n\nexport default ReactDOM.render(<Root />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}