{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nexport const useLocalStorage = (key, initialValue) => {\n  _s();\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (err) {\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      setStoredValue(value);\n      window.localStorage.setItem(key, JSON.stringify(value));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return [storedValue, setValue];\n};\n\n_s(useLocalStorage, \"dP6eDW/PCkGt6/j/z8d31pw0WrI=\");","map":{"version":3,"sources":["/home/segundo/Documents/CODE/BOOTCAMP/chekpoints/TMDB-checkpoint-220101/src/hooks/useLocalStorage.js"],"names":["React","useState","useLocalStorage","key","initialValue","storedValue","setStoredValue","item","window","localStorage","getItem","JSON","parse","err","setValue","value","setItem","stringify","console","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,GAAD,EAAMC,YAAN,KAAuB;AAAA;;AACpD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,MAAM;AACnD,QAAI;AACF,YAAMM,IAAI,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BP,GAA5B,CAAb;AACA,aAAOI,IAAI,GAAGI,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAH,GAAsBH,YAAjC;AACD,KAHD,CAGE,OAAOS,GAAP,EAAY;AACZ,aAAOT,YAAP;AACD;AACF,GAP6C,CAA9C;;AASA,QAAMU,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAI;AACFT,MAAAA,cAAc,CAACS,KAAD,CAAd;AACAP,MAAAA,MAAM,CAACC,YAAP,CAAoBO,OAApB,CAA4Bb,GAA5B,EAAiCQ,IAAI,CAACM,SAAL,CAAeF,KAAf,CAAjC;AACD,KAHD,CAGE,OAAOF,GAAP,EAAY;AACZK,MAAAA,OAAO,CAACC,KAAR,CAAcN,GAAd;AACD;AACF,GAPD;;AASA,SAAO,CAACR,WAAD,EAAcS,QAAd,CAAP;AACD,CApBM;;GAAMZ,e","sourcesContent":["import React, { useState } from \"react\";\n\nexport const useLocalStorage = (key, initialValue) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (err) {\n      return initialValue;\n    }\n  });\n\n  const setValue = (value) => {\n    try {\n      setStoredValue(value);\n      window.localStorage.setItem(key, JSON.stringify(value));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return [storedValue, setValue];\n};\n"]},"metadata":{},"sourceType":"module"}